<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Select Books To Take</title>
  <link href="/css/styles.css" rel="stylesheet">
  <link rel="stylesheet" href="/fontawesome-free-6.5.2-web/css/all.min.css">
  <!-- Include Tailwind CSS -->
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <!-- Include DaisyUI for additional components -->
  <link href="https://cdn.jsdelivr.net/npm/daisyui@1.11.4/dist/full.css" rel="stylesheet">

  <style>
    #main {
      height: calc(100vh - 10rem);
    }

    .book-section {
      flex: 1;
      margin: 0 1rem;
    }
  </style>
</head>

<body class="w-full">
  {{>upperPart }}

  <form id="bookForm">
    <div class="book-list">
      <h3>Select Books to Take</h3>
      <ul>
        {{#each books}}
        <li>
          <label>
            <input type="checkbox" name="selectedBooks[]" value="{{this.id}}" data-title="{{this.title}}"
              data-description="{{this.description}}" data-giver='{
                     "id": {{this.giver.id}},
                     "username": "{{this.giver.username}}",
                     "fullName": "{{this.giver.fullName}}",
                     "city": "{{this.giver.city}}",
                     "state": "{{this.giver.state}}",
                     "address": "{{this.giver.address}}"
                   }'>
            {{this.title}} by {{this.giver.username}}
          </label>
        </li>
        {{/each}}
      </ul>
    </div>
    <button type="submit">Submit Selected Books</button>
  </form>

  <script>
    // Function to check previously selected books from localStorage
    function loadSelectedBooks() {
      const selectedBooks = JSON.parse(localStorage.getItem('selectedBooksToTake')) || [];

      // Iterate through each selected book ID and check the corresponding checkbox
      selectedBooks.forEach(book => {
        const checkbox = document.querySelector(`input[name="selectedBooks[]"][value="${book.id}"]`);
        if (checkbox) {
          checkbox.checked = true; // Check the checkbox if it's part of the saved books
        }
      });
    }

    // Call the function after the DOM is loaded
    document.addEventListener('DOMContentLoaded', function () {
      loadSelectedBooks();
    });

    document.getElementById('bookForm').addEventListener('submit', function (event) {
      event.preventDefault(); // Prevent default form submission

      // Array to store selected books
      const selectedBooks = [];

      // Get all checked checkboxes
      document.querySelectorAll('input[name="selectedBooks[]"]:checked').forEach(checkbox => {
        // Parse giver data from data-giver attribute
        const giver = JSON.parse(checkbox.getAttribute('data-giver'));

        // Push the book data into the selectedBooks array
        selectedBooks.push({
          id: checkbox.value,
          title: checkbox.getAttribute('data-title'),
          description: checkbox.getAttribute('data-description'),
          giver: giver
        });
      });

      // Store selected books in localStorage
      localStorage.setItem('selectedBooksToTake', JSON.stringify(selectedBooks));

      // Optional: Redirect to another page if necessary
      window.location.href = '/create-request';
    });
  </script>
  {{>belowPart }}
</body>

</html>