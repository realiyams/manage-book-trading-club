<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Profile</title>
  <link href="/css/styles.css" rel="stylesheet">
  <link rel="stylesheet" href="/fontawesome-free-6.5.2-web/css/all.min.css">
  <!-- Include Tailwind CSS -->
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <!-- Include DaisyUI for additional components -->
  <link href="https://cdn.jsdelivr.net/npm/daisyui@1.11.4/dist/full.css" rel="stylesheet">

  <style>
    #main {
      height: calc(100vh - 10rem);
      /* Tinggi viewport - 10rem (misalnya untuk menyesuaikan dengan margin diatasnya) */
    }
  </style>
</head>

<body class="w-full">
  {{>upperPart }}

  <div id="success-message" class="hidden fixed top-20 lg:top-24 inset-x-0 mx-auto w-full max-w-screen-md px-4 lg:z-50">
    <div role="alert"
      class="bg-green-500 text-white font-bold px-4 py-3 lg:py-2 rounded-md flex items-center justify-between shadow-md">
      <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6 hidden lg:block" fill="none"
        viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
      <span class="flex-grow lg:pl-3" id="success-text">Profile updated successfully!</span>
      <button type="button" class="text-white close lg:pb-2" onclick="closeSuccessAlert()">
        <span aria-hidden="true" class="font-bold text-2xl">&times;</span>
      </button>
    </div>
  </div>

  <script>
    function closeSuccessAlert() {
      document.getElementById('success-message').style.display = 'none';
    }
  </script>

  <div id="error-message" class="hidden fixed top-20 lg:top-24 inset-x-0 mx-auto w-full max-w-screen-md px-4 lg:z-50">
    <div role="alert"
      class="bg-red-500 text-white font-bold px-4 py-3 lg:py-2 rounded-md flex items-center justify-between shadow-md">
      <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6 hidden lg:block" fill="none"
        viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
      <span class="flex-grow lg:pl-3" id="error-text">Error while updated Profile!</span>
      <button type="button" class="text-white close lg:pb-2" onclick="closeErrorAlert()">
        <span aria-hidden="true" class="font-bold text-2xl">&times;</span>
      </button>
    </div>
  </div>

  <script>
    function closeErrorAlert() {
      document.getElementById('error-message').style.display = 'none';
    }
  </script>

  <div id="main" class="flex justify-center items-center flex-col mx-5 my-5 lg:mx-auto lg:mt-10 lg:mb-0">
    <div class="card !static bg-cyan-700 shadow-xl w-full sm:w-4/5 lg:h-auto lg:w-1/2 pb-3 lg:pb-0">

      <div class="card-body p-4 lg:p-8 flex flex-col items-center w-full lg:justify-start lg:h-full lg:pl-8">
        <div class="mb-2 lg:mb-0 w-full flex justify-center flex-col">
          <h2 class="card-title text-white font-extrabold text-2xl justify-center mb-4 mt-2">
            Edit Profile
            <span class="text-base font-normal">for {{user.username}}</span>
          </h2>
          <div class="divider divider-info m-0 w-full"></div>
        </div>

        <div class="flex flex-col justify-center items-center w-full px-1 h-full">

          <div class="items-center md:w-4/5 lg:w-3/5">
            <div class="mb-2">
              <label for="fullName" class="font-medium text-white">Full Name :</label>
              <input type="text" id="fullName" name="fullName" value="{{user.fullName}}" required
                class="mt-1 p-2 w-full shadow-sm sm:text-sm border-gray-300 rounded-md text-black bg-white h-6">
            </div>

            <div class="mb-2">
              <label for="username" class="font-medium text-white">Username :</label>
              <input type="text" id="username" name="username" value="{{user.username}}" required
                class="mt-1 p-2 w-full shadow-sm sm:text-sm border-gray-300 rounded-md text-black bg-white h-6">
            </div>

            <div class="mb-2">
              <label for="city" class="font-medium text-white">City :</label>
              <input type="text" id="city" name="city" value="{{user.city}}" required
                class="mt-1 p-2 w-full shadow-sm sm:text-sm border-gray-300 rounded-md text-black bg-white h-6">
            </div>

            <div class="mb-2">
              <label for="state" class="font-medium text-white">State :</label>
              <input type="text" id="state" name="state" value="{{user.state}}" required
                class="mt-1 p-2 w-full shadow-sm sm:text-sm border-gray-300 rounded-md text-black bg-white h-6">
            </div>

            <div class="mb-2">
              <label for="address" class="font-medium text-white">Address :</label>
              <input type="text" id="address" name="address" value="{{user.address}}" required
                class="mt-1 p-2 w-full shadow-sm sm:text-sm border-gray-300 rounded-md text-black bg-white h-6">
            </div>

          </div>

          <div class="flex justify-center items-center w-full">
            <div class="card-actions mt-4">
              <button id="editProfileButton"
                class="w-full btn bg-green-950 h-10 text-white font-extrabold py-2 px-8 glass">Done</button>
            </div>
          </div>

        </div>
      </div>

    </div>
  </div>

  <script>
    // Ambil token JWT dari local storage
    const token = localStorage.getItem('jwtToken');

    // Temukan tombol edit profil
    const editProfileButton = document.getElementById('editProfileButton');
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');
    const errorText = document.getElementById('error-text');

    // Jika token ada dan tombol ditemukan
    // ...
    if (token && editProfileButton) {
      editProfileButton.addEventListener('click', () => {
        const fullName = document.getElementById('fullName').value;
        const username = document.getElementById('username').value;
        const city = document.getElementById('city').value;
        const state = document.getElementById('state').value;
        const address = document.getElementById('address').value;

        // Validasi input
        if (!fullName.trim() || !username.trim()) {
          // Jika fullName atau username kosong, tampilkan pesan error
          errorText.textContent = 'Full Name and Username cannot be empty';
          errorMessage.style.display = 'block';
          // Hentikan eksekusi lebih lanjut

          setTimeout(() => {
            errorMessage.style.display = "none";
            errorText.textContent = 'Error while updated Profile!';
          }, 5000);

          return;
        }

        // Siapkan headers
        const headers = new Headers();
        headers.append('Authorization', `Bearer ${token}`);
        headers.append('Content-Type', 'application/json'); // Sesuaikan dengan tipe konten yang diharapkan oleh server

        const requestOptions = {
          method: 'POST',
          headers: headers,
          body: JSON.stringify({
            fullName: fullName,
            username: username,
            city: city,
            state: state,
            address: address
          })
        };

        fetch('edit-profile', requestOptions)
          .then(response => {
            if (!response.ok) {
              throw new Error('Failed to edit profile');
            }
            return response.json();
          })
          .then(data => {
            // console.log('Profile edited successfully:', data);
            successMessage.style.display = "block";
            setTimeout(() => {
              successMessage.style.display = "none";
            }, 5000);
          })
          .catch(error => {
            // console.error('Error editing profile:', error.message);
            errorMessage.style.display = "block";
            setTimeout(() => {
              errorMessage.style.display = "none";
            }, 5000);
          });
      });
    } else {
      console.error('JWT token not found in local storage or edit profile button not found');
    }

  </script>

  {{>belowPart }}

</body>

</html>